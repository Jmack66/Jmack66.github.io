import { ILogger, IPageContent, IPaperMetadata, ISearchOptions, IWebClient } from './interfaces';
export declare class GoogleScholar {
    private readonly webClient;
    private readonly logger?;
    private GOOGLE_SCHOLAR_URL_PREFIX;
    private GOOGLE_SCHOLAR_URL;
    private perSecLimiter;
    private perMinLimiter;
    constructor(webClient: IWebClient, logger?: ILogger | undefined);
    getSearchUrl({ keywords, yearHigh, yearLow, authors }: ISearchOptions): string;
    search(opts: ISearchOptions): Promise<IPageContent>;
    iteratePages(opts: ISearchOptions, onPage: (page: IPageContent) => Promise<boolean>): Promise<void>;
    iteratePapers(opts: ISearchOptions, onPaper: (paper: IPaperMetadata) => Promise<boolean>, concurrency?: number): Promise<void>;
    parseUrl(url: string): Promise<IPageContent>;
    private getUrl;
    private processHtml;
    private parsePaperElement;
    private getPaperSource;
    private getAuthors;
    private getCitation;
    private getRelatedArticlesUrl;
    private getTotalPapersCount;
    private isValidUrl;
}
